/**
 * generated by Xtext 2.21.0
 */
package uk.ac.kcl.shiro.mydbl0304.myDbl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import uk.ac.kcl.shiro.mydbl0304.myDbl.AttributeOfElement;
import uk.ac.kcl.shiro.mydbl0304.myDbl.BasicVar;
import uk.ac.kcl.shiro.mydbl0304.myDbl.JointConditionUnit;
import uk.ac.kcl.shiro.mydbl0304.myDbl.MyDblPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Joint Condition Unit</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.kcl.shiro.mydbl0304.myDbl.impl.JointConditionUnitImpl#getElementLeft <em>Element Left</em>}</li>
 *   <li>{@link uk.ac.kcl.shiro.mydbl0304.myDbl.impl.JointConditionUnitImpl#getJudgement <em>Judgement</em>}</li>
 *   <li>{@link uk.ac.kcl.shiro.mydbl0304.myDbl.impl.JointConditionUnitImpl#getElementRight <em>Element Right</em>}</li>
 *   <li>{@link uk.ac.kcl.shiro.mydbl0304.myDbl.impl.JointConditionUnitImpl#getValue <em>Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class JointConditionUnitImpl extends MinimalEObjectImpl.Container implements JointConditionUnit
{
  /**
   * The cached value of the '{@link #getElementLeft() <em>Element Left</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElementLeft()
   * @generated
   * @ordered
   */
  protected AttributeOfElement elementLeft;

  /**
   * The default value of the '{@link #getJudgement() <em>Judgement</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getJudgement()
   * @generated
   * @ordered
   */
  protected static final String JUDGEMENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getJudgement() <em>Judgement</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getJudgement()
   * @generated
   * @ordered
   */
  protected String judgement = JUDGEMENT_EDEFAULT;

  /**
   * The cached value of the '{@link #getElementRight() <em>Element Right</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElementRight()
   * @generated
   * @ordered
   */
  protected AttributeOfElement elementRight;

  /**
   * The cached value of the '{@link #getValue() <em>Value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected BasicVar value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected JointConditionUnitImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDblPackage.Literals.JOINT_CONDITION_UNIT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AttributeOfElement getElementLeft()
  {
    return elementLeft;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetElementLeft(AttributeOfElement newElementLeft, NotificationChain msgs)
  {
    AttributeOfElement oldElementLeft = elementLeft;
    elementLeft = newElementLeft;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDblPackage.JOINT_CONDITION_UNIT__ELEMENT_LEFT, oldElementLeft, newElementLeft);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setElementLeft(AttributeOfElement newElementLeft)
  {
    if (newElementLeft != elementLeft)
    {
      NotificationChain msgs = null;
      if (elementLeft != null)
        msgs = ((InternalEObject)elementLeft).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDblPackage.JOINT_CONDITION_UNIT__ELEMENT_LEFT, null, msgs);
      if (newElementLeft != null)
        msgs = ((InternalEObject)newElementLeft).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDblPackage.JOINT_CONDITION_UNIT__ELEMENT_LEFT, null, msgs);
      msgs = basicSetElementLeft(newElementLeft, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDblPackage.JOINT_CONDITION_UNIT__ELEMENT_LEFT, newElementLeft, newElementLeft));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getJudgement()
  {
    return judgement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setJudgement(String newJudgement)
  {
    String oldJudgement = judgement;
    judgement = newJudgement;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDblPackage.JOINT_CONDITION_UNIT__JUDGEMENT, oldJudgement, judgement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AttributeOfElement getElementRight()
  {
    return elementRight;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetElementRight(AttributeOfElement newElementRight, NotificationChain msgs)
  {
    AttributeOfElement oldElementRight = elementRight;
    elementRight = newElementRight;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDblPackage.JOINT_CONDITION_UNIT__ELEMENT_RIGHT, oldElementRight, newElementRight);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setElementRight(AttributeOfElement newElementRight)
  {
    if (newElementRight != elementRight)
    {
      NotificationChain msgs = null;
      if (elementRight != null)
        msgs = ((InternalEObject)elementRight).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDblPackage.JOINT_CONDITION_UNIT__ELEMENT_RIGHT, null, msgs);
      if (newElementRight != null)
        msgs = ((InternalEObject)newElementRight).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDblPackage.JOINT_CONDITION_UNIT__ELEMENT_RIGHT, null, msgs);
      msgs = basicSetElementRight(newElementRight, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDblPackage.JOINT_CONDITION_UNIT__ELEMENT_RIGHT, newElementRight, newElementRight));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BasicVar getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetValue(BasicVar newValue, NotificationChain msgs)
  {
    BasicVar oldValue = value;
    value = newValue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDblPackage.JOINT_CONDITION_UNIT__VALUE, oldValue, newValue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setValue(BasicVar newValue)
  {
    if (newValue != value)
    {
      NotificationChain msgs = null;
      if (value != null)
        msgs = ((InternalEObject)value).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDblPackage.JOINT_CONDITION_UNIT__VALUE, null, msgs);
      if (newValue != null)
        msgs = ((InternalEObject)newValue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDblPackage.JOINT_CONDITION_UNIT__VALUE, null, msgs);
      msgs = basicSetValue(newValue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDblPackage.JOINT_CONDITION_UNIT__VALUE, newValue, newValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDblPackage.JOINT_CONDITION_UNIT__ELEMENT_LEFT:
        return basicSetElementLeft(null, msgs);
      case MyDblPackage.JOINT_CONDITION_UNIT__ELEMENT_RIGHT:
        return basicSetElementRight(null, msgs);
      case MyDblPackage.JOINT_CONDITION_UNIT__VALUE:
        return basicSetValue(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDblPackage.JOINT_CONDITION_UNIT__ELEMENT_LEFT:
        return getElementLeft();
      case MyDblPackage.JOINT_CONDITION_UNIT__JUDGEMENT:
        return getJudgement();
      case MyDblPackage.JOINT_CONDITION_UNIT__ELEMENT_RIGHT:
        return getElementRight();
      case MyDblPackage.JOINT_CONDITION_UNIT__VALUE:
        return getValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDblPackage.JOINT_CONDITION_UNIT__ELEMENT_LEFT:
        setElementLeft((AttributeOfElement)newValue);
        return;
      case MyDblPackage.JOINT_CONDITION_UNIT__JUDGEMENT:
        setJudgement((String)newValue);
        return;
      case MyDblPackage.JOINT_CONDITION_UNIT__ELEMENT_RIGHT:
        setElementRight((AttributeOfElement)newValue);
        return;
      case MyDblPackage.JOINT_CONDITION_UNIT__VALUE:
        setValue((BasicVar)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDblPackage.JOINT_CONDITION_UNIT__ELEMENT_LEFT:
        setElementLeft((AttributeOfElement)null);
        return;
      case MyDblPackage.JOINT_CONDITION_UNIT__JUDGEMENT:
        setJudgement(JUDGEMENT_EDEFAULT);
        return;
      case MyDblPackage.JOINT_CONDITION_UNIT__ELEMENT_RIGHT:
        setElementRight((AttributeOfElement)null);
        return;
      case MyDblPackage.JOINT_CONDITION_UNIT__VALUE:
        setValue((BasicVar)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDblPackage.JOINT_CONDITION_UNIT__ELEMENT_LEFT:
        return elementLeft != null;
      case MyDblPackage.JOINT_CONDITION_UNIT__JUDGEMENT:
        return JUDGEMENT_EDEFAULT == null ? judgement != null : !JUDGEMENT_EDEFAULT.equals(judgement);
      case MyDblPackage.JOINT_CONDITION_UNIT__ELEMENT_RIGHT:
        return elementRight != null;
      case MyDblPackage.JOINT_CONDITION_UNIT__VALUE:
        return value != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (judgement: ");
    result.append(judgement);
    result.append(')');
    return result.toString();
  }

} //JointConditionUnitImpl
