/*
 * generated by Xtext 2.21.0
 */
grammar InternalMyDbl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package uk.ac.kcl.shiro.mydbl0304.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package uk.ac.kcl.shiro.mydbl0304.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import uk.ac.kcl.shiro.mydbl0304.services.MyDblGrammarAccess;

}

@parser::members {

 	private MyDblGrammarAccess grammarAccess;

    public InternalMyDblParser(TokenStream input, MyDblGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Database";
   	}

   	@Override
   	protected MyDblGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDatabase
entryRuleDatabase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDatabaseRule()); }
	iv_ruleDatabase=ruleDatabase
	{ $current=$iv_ruleDatabase.current; }
	EOF;

// Rule Database
ruleDatabase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='create'
		{
			newLeafNode(otherlv_0, grammarAccess.getDatabaseAccess().getCreateKeyword_0());
		}
		otherlv_1='database'
		{
			newLeafNode(otherlv_1, grammarAccess.getDatabaseAccess().getDatabaseKeyword_1());
		}
		otherlv_2='named'
		{
			newLeafNode(otherlv_2, grammarAccess.getDatabaseAccess().getNamedKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getDatabaseAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatabaseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDatabaseAccess().getInstructionsInstructionsParserRuleCall_4_0());
				}
				lv_instructions_4_0=ruleInstructions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDatabaseRule());
					}
					add(
						$current,
						"instructions",
						lv_instructions_4_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.Instructions");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleInstructions
entryRuleInstructions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstructionsRule()); }
	iv_ruleInstructions=ruleInstructions
	{ $current=$iv_ruleInstructions.current; }
	EOF;

// Rule Instructions
ruleInstructions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInstructionsAccess().getCreateTableInstructionParserRuleCall_0());
		}
		this_CreateTableInstruction_0=ruleCreateTableInstruction
		{
			$current = $this_CreateTableInstruction_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionsAccess().getCreateElementInstructionParserRuleCall_1());
		}
		this_CreateElementInstruction_1=ruleCreateElementInstruction
		{
			$current = $this_CreateElementInstruction_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionsAccess().getCreateAttributeInstructionParserRuleCall_2());
		}
		this_CreateAttributeInstruction_2=ruleCreateAttributeInstruction
		{
			$current = $this_CreateAttributeInstruction_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionsAccess().getAddInstructionParserRuleCall_3());
		}
		this_AddInstruction_3=ruleAddInstruction
		{
			$current = $this_AddInstruction_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionsAccess().getFindInstructionParserRuleCall_4());
		}
		this_FindInstruction_4=ruleFindInstruction
		{
			$current = $this_FindInstruction_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionsAccess().getDeleteInstructionParserRuleCall_5());
		}
		this_DeleteInstruction_5=ruleDeleteInstruction
		{
			$current = $this_DeleteInstruction_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCreateTableInstruction
entryRuleCreateTableInstruction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateTableInstructionRule()); }
	iv_ruleCreateTableInstruction=ruleCreateTableInstruction
	{ $current=$iv_ruleCreateTableInstruction.current; }
	EOF;

// Rule CreateTableInstruction
ruleCreateTableInstruction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='create'
		{
			newLeafNode(otherlv_0, grammarAccess.getCreateTableInstructionAccess().getCreateKeyword_0());
		}
		otherlv_1='a'
		{
			newLeafNode(otherlv_1, grammarAccess.getCreateTableInstructionAccess().getAKeyword_1());
		}
		otherlv_2='table'
		{
			newLeafNode(otherlv_2, grammarAccess.getCreateTableInstructionAccess().getTableKeyword_2());
		}
		otherlv_3='named'
		{
			newLeafNode(otherlv_3, grammarAccess.getCreateTableInstructionAccess().getNamedKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateTableInstructionAccess().getTableTableParserRuleCall_4_0());
				}
				lv_table_4_0=ruleTable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateTableInstructionRule());
					}
					set(
						$current,
						"table",
						lv_table_4_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.Table");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateTableInstructionAccess().getElementCreateElementInstructionParserRuleCall_5_0());
				}
				lv_element_5_0=ruleCreateElementInstruction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateTableInstructionRule());
					}
					set(
						$current,
						"element",
						lv_element_5_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.CreateElementInstruction");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTable
entryRuleTable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableRule()); }
	iv_ruleTable=ruleTable
	{ $current=$iv_ruleTable.current; }
	EOF;

// Rule Table
ruleTable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getTableAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTableRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleCreateElementInstruction
entryRuleCreateElementInstruction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateElementInstructionRule()); }
	iv_ruleCreateElementInstruction=ruleCreateElementInstruction
	{ $current=$iv_ruleCreateElementInstruction.current; }
	EOF;

// Rule CreateElementInstruction
ruleCreateElementInstruction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=','
		{
			newLeafNode(otherlv_0, grammarAccess.getCreateElementInstructionAccess().getCommaKeyword_0());
		}
		otherlv_1='which'
		{
			newLeafNode(otherlv_1, grammarAccess.getCreateElementInstructionAccess().getWhichKeyword_1());
		}
		otherlv_2='saves'
		{
			newLeafNode(otherlv_2, grammarAccess.getCreateElementInstructionAccess().getSavesKeyword_2());
		}
		otherlv_3='data'
		{
			newLeafNode(otherlv_3, grammarAccess.getCreateElementInstructionAccess().getDataKeyword_3());
		}
		otherlv_4='of'
		{
			newLeafNode(otherlv_4, grammarAccess.getCreateElementInstructionAccess().getOfKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateElementInstructionAccess().getElementElementParserRuleCall_5_0());
				}
				lv_element_5_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateElementInstructionRule());
					}
					set(
						$current,
						"element",
						lv_element_5_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getElementAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getElementRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleCreateAttributeInstruction
entryRuleCreateAttributeInstruction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateAttributeInstructionRule()); }
	iv_ruleCreateAttributeInstruction=ruleCreateAttributeInstruction
	{ $current=$iv_ruleCreateAttributeInstruction.current; }
	EOF;

// Rule CreateAttributeInstruction
ruleCreateAttributeInstruction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateAttributeInstructionAccess().getElementElementParserRuleCall_0_0());
				}
				lv_element_0_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateAttributeInstructionRule());
					}
					set(
						$current,
						"element",
						lv_element_0_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='has'
		{
			newLeafNode(otherlv_1, grammarAccess.getCreateAttributeInstructionAccess().getHasKeyword_1());
		}
		otherlv_2='attribute'
		{
			newLeafNode(otherlv_2, grammarAccess.getCreateAttributeInstructionAccess().getAttributeKeyword_2());
		}
		otherlv_3='named'
		{
			newLeafNode(otherlv_3, grammarAccess.getCreateAttributeInstructionAccess().getNamedKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateAttributeInstructionAccess().getAttributeAttributeParserRuleCall_4_0());
				}
				lv_attribute_4_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateAttributeInstructionRule());
					}
					set(
						$current,
						"attribute",
						lv_attribute_4_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getCreateAttributeInstructionAccess().getCommaKeyword_5());
		}
		otherlv_6='which'
		{
			newLeafNode(otherlv_6, grammarAccess.getCreateAttributeInstructionAccess().getWhichKeyword_6());
		}
		otherlv_7='is'
		{
			newLeafNode(otherlv_7, grammarAccess.getCreateAttributeInstructionAccess().getIsKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateAttributeInstructionAccess().getAttributeTypeAttributeTypeParserRuleCall_8_0());
				}
				lv_attributeType_8_0=ruleAttributeType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateAttributeInstructionRule());
					}
					set(
						$current,
						"attributeType",
						lv_attributeType_8_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.AttributeType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getAttributeRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleAttributeType
entryRuleAttributeType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAttributeTypeRule()); }
	iv_ruleAttributeType=ruleAttributeType
	{ $current=$iv_ruleAttributeType.current.getText(); }
	EOF;

// Rule AttributeType
ruleAttributeType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='Binary'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributeTypeAccess().getBinaryKeyword_0());
		}
		    |
		kw='Varbinary'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributeTypeAccess().getVarbinaryKeyword_1());
		}
		    |
		kw='Image'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributeTypeAccess().getImageKeyword_2());
		}
		    |
		kw='Char'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributeTypeAccess().getCharKeyword_3());
		}
		    |
		kw='Varchar'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributeTypeAccess().getVarcharKeyword_4());
		}
		    |
		kw='Text'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributeTypeAccess().getTextKeyword_5());
		}
		    |
		kw='Nchar'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributeTypeAccess().getNcharKeyword_6());
		}
		    |
		kw='Nvarchar'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributeTypeAccess().getNvarcharKeyword_7());
		}
		    |
		kw='Ntext'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributeTypeAccess().getNtextKeyword_8());
		}
		    |
		kw='Datetime'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributeTypeAccess().getDatetimeKeyword_9());
		}
		    |
		kw='Smalldatetime'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributeTypeAccess().getSmalldatetimeKeyword_10());
		}
		    |
		kw='Date'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributeTypeAccess().getDateKeyword_11());
		}
		    |
		kw='TimeStamp'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributeTypeAccess().getTimeStampKeyword_12());
		}
		    |
		kw='Integer'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributeTypeAccess().getIntegerKeyword_13());
		}
		    |
		kw='Double'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributeTypeAccess().getDoubleKeyword_14());
		}
		    |
		kw='Float'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributeTypeAccess().getFloatKeyword_15());
		}
	)
;

// Entry rule entryRuleBasicVar
entryRuleBasicVar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasicVarRule()); }
	iv_ruleBasicVar=ruleBasicVar
	{ $current=$iv_ruleBasicVar.current; }
	EOF;

// Rule BasicVar
ruleBasicVar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_integer_0_0=RULE_INT
				{
					newLeafNode(lv_integer_0_0, grammarAccess.getBasicVarAccess().getIntegerINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBasicVarRule());
					}
					setWithLastConsumed(
						$current,
						"integer",
						lv_integer_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		    |
		(
			(
				lv_string_1_0=RULE_STRING
				{
					newLeafNode(lv_string_1_0, grammarAccess.getBasicVarAccess().getStringSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBasicVarRule());
					}
					setWithLastConsumed(
						$current,
						"string",
						lv_string_1_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleAddInstruction
entryRuleAddInstruction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddInstructionRule()); }
	iv_ruleAddInstruction=ruleAddInstruction
	{ $current=$iv_ruleAddInstruction.current; }
	EOF;

// Rule AddInstruction
ruleAddInstruction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='add'
		{
			newLeafNode(otherlv_0, grammarAccess.getAddInstructionAccess().getAddKeyword_0());
		}
		otherlv_1='a'
		{
			newLeafNode(otherlv_1, grammarAccess.getAddInstructionAccess().getAKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAddInstructionAccess().getElementElementParserRuleCall_2_0());
				}
				lv_element_2_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddInstructionRule());
					}
					set(
						$current,
						"element",
						lv_element_2_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='with'
		{
			newLeafNode(otherlv_3, grammarAccess.getAddInstructionAccess().getWithKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAddInstructionAccess().getInsertInstructionInsertInstructionParserRuleCall_4_0());
				}
				lv_insertInstruction_4_0=ruleInsertInstruction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddInstructionRule());
					}
					set(
						$current,
						"insertInstruction",
						lv_insertInstruction_4_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.InsertInstruction");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInsertInstruction
entryRuleInsertInstruction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInsertInstructionRule()); }
	iv_ruleInsertInstruction=ruleInsertInstruction
	{ $current=$iv_ruleInsertInstruction.current; }
	EOF;

// Rule InsertInstruction
ruleInsertInstruction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInsertInstructionAccess().getSetAttributeInstructionsSetAttributeInstructionParserRuleCall_0_0());
				}
				lv_setAttributeInstructions_0_0=ruleSetAttributeInstruction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsertInstructionRule());
					}
					add(
						$current,
						"setAttributeInstructions",
						lv_setAttributeInstructions_0_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.SetAttributeInstruction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getInsertInstructionAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInsertInstructionAccess().getSetAttributeInstructionsSetAttributeInstructionParserRuleCall_1_1_0());
					}
					lv_setAttributeInstructions_2_0=ruleSetAttributeInstruction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInsertInstructionRule());
						}
						add(
							$current,
							"setAttributeInstructions",
							lv_setAttributeInstructions_2_0,
							"uk.ac.kcl.shiro.mydbl0304.MyDbl.SetAttributeInstruction");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleSetAttributeInstruction
entryRuleSetAttributeInstruction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetAttributeInstructionRule()); }
	iv_ruleSetAttributeInstruction=ruleSetAttributeInstruction
	{ $current=$iv_ruleSetAttributeInstruction.current; }
	EOF;

// Rule SetAttributeInstruction
ruleSetAttributeInstruction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSetAttributeInstructionAccess().getAttributeAttributeParserRuleCall_0_0());
				}
				lv_attribute_0_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetAttributeInstructionRule());
					}
					set(
						$current,
						"attribute",
						lv_attribute_0_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='of'
		{
			newLeafNode(otherlv_1, grammarAccess.getSetAttributeInstructionAccess().getOfKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetAttributeInstructionAccess().getAttributeValueBasicVarParserRuleCall_2_0());
				}
				lv_attributeValue_2_0=ruleBasicVar
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetAttributeInstructionRule());
					}
					set(
						$current,
						"attributeValue",
						lv_attributeValue_2_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.BasicVar");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFindInstruction
entryRuleFindInstruction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFindInstructionRule()); }
	iv_ruleFindInstruction=ruleFindInstruction
	{ $current=$iv_ruleFindInstruction.current; }
	EOF;

// Rule FindInstruction
ruleFindInstruction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='find'
		{
			newLeafNode(otherlv_0, grammarAccess.getFindInstructionAccess().getFindKeyword_0());
		}
		otherlv_1='the'
		{
			newLeafNode(otherlv_1, grammarAccess.getFindInstructionAccess().getTheKeyword_1());
		}
		(
			{
				newCompositeNode(grammarAccess.getFindInstructionAccess().getSingleElementParserRuleCall_2_0());
			}
			this_SingleElement_2=ruleSingleElement
			{
				$current = $this_SingleElement_2.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getFindInstructionAccess().getJointElementParserRuleCall_2_1());
			}
			this_JointElement_3=ruleJointElement
			{
				$current = $this_JointElement_3.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSingleElement
entryRuleSingleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleElementRule()); }
	iv_ruleSingleElement=ruleSingleElement
	{ $current=$iv_ruleSingleElement.current; }
	EOF;

// Rule SingleElement
ruleSingleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSingleElementAccess().getTargetsTargetParserRuleCall_0_0_0());
					}
					lv_targets_0_0=ruleTarget
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSingleElementRule());
						}
						set(
							$current,
							"targets",
							lv_targets_0_0,
							"uk.ac.kcl.shiro.mydbl0304.MyDbl.Target");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='of'
			{
				newLeafNode(otherlv_1, grammarAccess.getSingleElementAccess().getOfKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleElementAccess().getElementElementParserRuleCall_1_0());
				}
				lv_element_2_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleElementRule());
					}
					set(
						$current,
						"element",
						lv_element_2_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getSingleElementAccess().getCommaKeyword_2_0());
			}
			otherlv_4='whose'
			{
				newLeafNode(otherlv_4, grammarAccess.getSingleElementAccess().getWhoseKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSingleElementAccess().getConditionsSingleConditionParserRuleCall_2_2_0());
					}
					lv_conditions_5_0=ruleSingleCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSingleElementRule());
						}
						set(
							$current,
							"conditions",
							lv_conditions_5_0,
							"uk.ac.kcl.shiro.mydbl0304.MyDbl.SingleCondition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleTarget
entryRuleTarget returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTargetRule()); }
	iv_ruleTarget=ruleTarget
	{ $current=$iv_ruleTarget.current; }
	EOF;

// Rule Target
ruleTarget returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTargetAccess().getAttributesAttributeParserRuleCall_0_0());
				}
				lv_attributes_0_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTargetRule());
					}
					add(
						$current,
						"attributes",
						lv_attributes_0_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getTargetAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTargetAccess().getAttributesAttributeParserRuleCall_1_1_0());
					}
					lv_attributes_2_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTargetRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_2_0,
							"uk.ac.kcl.shiro.mydbl0304.MyDbl.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleJointElement
entryRuleJointElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJointElementRule()); }
	iv_ruleJointElement=ruleJointElement
	{ $current=$iv_ruleJointElement.current; }
	EOF;

// Rule JointElement
ruleJointElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getJointElementAccess().getElementsElementParserRuleCall_0_0());
				}
				lv_elements_0_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJointElementRule());
					}
					add(
						$current,
						"elements",
						lv_elements_0_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='with'
			{
				newLeafNode(otherlv_1, grammarAccess.getJointElementAccess().getWithKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointElementAccess().getElementsElementParserRuleCall_1_1_0());
					}
					lv_elements_2_0=ruleElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointElementRule());
						}
						add(
							$current,
							"elements",
							lv_elements_2_0,
							"uk.ac.kcl.shiro.mydbl0304.MyDbl.Element");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getJointElementAccess().getCommaKeyword_2());
		}
		otherlv_4='in'
		{
			newLeafNode(otherlv_4, grammarAccess.getJointElementAccess().getInKeyword_3());
		}
		otherlv_5='which'
		{
			newLeafNode(otherlv_5, grammarAccess.getJointElementAccess().getWhichKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJointElementAccess().getConditionsJointConditionParserRuleCall_5_0());
				}
				lv_conditions_6_0=ruleJointCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJointElementRule());
					}
					set(
						$current,
						"conditions",
						lv_conditions_6_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.JointCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSingleCondition
entryRuleSingleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleConditionRule()); }
	iv_ruleSingleCondition=ruleSingleCondition
	{ $current=$iv_ruleSingleCondition.current; }
	EOF;

// Rule SingleCondition
ruleSingleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleConditionAccess().getConditionsSingleConditionUnitParserRuleCall_0_0());
				}
				lv_conditions_0_0=ruleSingleConditionUnit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleConditionRule());
					}
					add(
						$current,
						"conditions",
						lv_conditions_0_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.SingleConditionUnit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getSingleConditionAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSingleConditionAccess().getConditionsSingleConditionUnitParserRuleCall_1_1_0());
					}
					lv_conditions_2_0=ruleSingleConditionUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSingleConditionRule());
						}
						add(
							$current,
							"conditions",
							lv_conditions_2_0,
							"uk.ac.kcl.shiro.mydbl0304.MyDbl.SingleConditionUnit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleJointCondition
entryRuleJointCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJointConditionRule()); }
	iv_ruleJointCondition=ruleJointCondition
	{ $current=$iv_ruleJointCondition.current; }
	EOF;

// Rule JointCondition
ruleJointCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getJointConditionAccess().getConditionsJointConditionUnitParserRuleCall_0_0());
				}
				lv_conditions_0_0=ruleJointConditionUnit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJointConditionRule());
					}
					add(
						$current,
						"conditions",
						lv_conditions_0_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.JointConditionUnit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getJointConditionAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointConditionAccess().getConditionsJointConditionUnitParserRuleCall_1_1_0());
					}
					lv_conditions_2_0=ruleJointConditionUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointConditionRule());
						}
						add(
							$current,
							"conditions",
							lv_conditions_2_0,
							"uk.ac.kcl.shiro.mydbl0304.MyDbl.JointConditionUnit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleSingleConditionUnit
entryRuleSingleConditionUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleConditionUnitRule()); }
	iv_ruleSingleConditionUnit=ruleSingleConditionUnit
	{ $current=$iv_ruleSingleConditionUnit.current; }
	EOF;

// Rule SingleConditionUnit
ruleSingleConditionUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleConditionUnitAccess().getAttributeLeftAttributeParserRuleCall_0_0());
				}
				lv_attributeLeft_0_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleConditionUnitRule());
					}
					set(
						$current,
						"attributeLeft",
						lv_attributeLeft_0_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleConditionUnitAccess().getJudgementJudgementParserRuleCall_1_0());
				}
				lv_judgement_1_0=ruleJudgement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleConditionUnitRule());
					}
					set(
						$current,
						"judgement",
						lv_judgement_1_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.Judgement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSingleConditionUnitAccess().getAttributeRightAttributeParserRuleCall_2_0_0());
					}
					lv_attributeRight_2_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSingleConditionUnitRule());
						}
						set(
							$current,
							"attributeRight",
							lv_attributeRight_2_0,
							"uk.ac.kcl.shiro.mydbl0304.MyDbl.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSingleConditionUnitAccess().getValueBasicVarParserRuleCall_2_1_0());
					}
					lv_value_3_0=ruleBasicVar
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSingleConditionUnitRule());
						}
						set(
							$current,
							"value",
							lv_value_3_0,
							"uk.ac.kcl.shiro.mydbl0304.MyDbl.BasicVar");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleJointConditionUnit
entryRuleJointConditionUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJointConditionUnitRule()); }
	iv_ruleJointConditionUnit=ruleJointConditionUnit
	{ $current=$iv_ruleJointConditionUnit.current; }
	EOF;

// Rule JointConditionUnit
ruleJointConditionUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getJointConditionUnitAccess().getElementLeftAttributeOfElementParserRuleCall_0_0());
				}
				lv_elementLeft_0_0=ruleAttributeOfElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJointConditionUnitRule());
					}
					set(
						$current,
						"elementLeft",
						lv_elementLeft_0_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.AttributeOfElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getJointConditionUnitAccess().getJudgementJudgementParserRuleCall_1_0());
				}
				lv_judgement_1_0=ruleJudgement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJointConditionUnitRule());
					}
					set(
						$current,
						"judgement",
						lv_judgement_1_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.Judgement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getJointConditionUnitAccess().getElementRightAttributeOfElementParserRuleCall_2_0_0());
					}
					lv_elementRight_2_0=ruleAttributeOfElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointConditionUnitRule());
						}
						set(
							$current,
							"elementRight",
							lv_elementRight_2_0,
							"uk.ac.kcl.shiro.mydbl0304.MyDbl.AttributeOfElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getJointConditionUnitAccess().getValueBasicVarParserRuleCall_2_1_0());
					}
					lv_value_3_0=ruleBasicVar
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointConditionUnitRule());
						}
						set(
							$current,
							"value",
							lv_value_3_0,
							"uk.ac.kcl.shiro.mydbl0304.MyDbl.BasicVar");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleAttributeOfElement
entryRuleAttributeOfElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeOfElementRule()); }
	iv_ruleAttributeOfElement=ruleAttributeOfElement
	{ $current=$iv_ruleAttributeOfElement.current; }
	EOF;

// Rule AttributeOfElement
ruleAttributeOfElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeOfElementAccess().getElementElementParserRuleCall_0_0());
				}
				lv_element_0_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeOfElementRule());
					}
					set(
						$current,
						"element",
						lv_element_0_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='\'s'
		{
			newLeafNode(otherlv_1, grammarAccess.getAttributeOfElementAccess().getSKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeOfElementAccess().getAttributeAttributeParserRuleCall_2_0());
				}
				lv_attribute_2_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeOfElementRule());
					}
					set(
						$current,
						"attribute",
						lv_attribute_2_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleJudgement
entryRuleJudgement returns [String current=null]:
	{ newCompositeNode(grammarAccess.getJudgementRule()); }
	iv_ruleJudgement=ruleJudgement
	{ $current=$iv_ruleJudgement.current.getText(); }
	EOF;

// Rule Judgement
ruleJudgement returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='is'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getJudgementAccess().getIsKeyword_0());
		}
		    |
		kw='as'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getJudgementAccess().getAsKeyword_1());
		}
		    |
		kw='equals'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getJudgementAccess().getEqualsKeyword_2());
		}
		    |
		(
			kw='is'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getJudgementAccess().getIsKeyword_3_0());
			}
			kw='not'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getJudgementAccess().getNotKeyword_3_1());
			}
		)
		    |
		(
			kw='not'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getJudgementAccess().getNotKeyword_4_0());
			}
			kw='equals'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getJudgementAccess().getEqualsKeyword_4_1());
			}
		)
		    |
		(
			kw='is'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getJudgementAccess().getIsKeyword_5_0());
			}
			kw='larger'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getJudgementAccess().getLargerKeyword_5_1());
			}
			kw='than'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getJudgementAccess().getThanKeyword_5_2());
			}
		)
		    |
		(
			kw='is'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getJudgementAccess().getIsKeyword_6_0());
			}
			kw='less'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getJudgementAccess().getLessKeyword_6_1());
			}
			kw='than'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getJudgementAccess().getThanKeyword_6_2());
			}
		)
		    |
		(
			kw='no'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getJudgementAccess().getNoKeyword_7_0());
			}
			kw='less'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getJudgementAccess().getLessKeyword_7_1());
			}
			kw='than'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getJudgementAccess().getThanKeyword_7_2());
			}
		)
		    |
		(
			kw='no'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getJudgementAccess().getNoKeyword_8_0());
			}
			kw='larger'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getJudgementAccess().getLargerKeyword_8_1());
			}
			kw='than'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getJudgementAccess().getThanKeyword_8_2());
			}
		)
	)
;

// Entry rule entryRuleDeleteInstruction
entryRuleDeleteInstruction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeleteInstructionRule()); }
	iv_ruleDeleteInstruction=ruleDeleteInstruction
	{ $current=$iv_ruleDeleteInstruction.current; }
	EOF;

// Rule DeleteInstruction
ruleDeleteInstruction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='remove'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeleteInstructionAccess().getRemoveKeyword_0());
		}
		otherlv_1='the'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeleteInstructionAccess().getTheKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeleteInstructionAccess().getElementElementParserRuleCall_2_0());
				}
				lv_element_2_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeleteInstructionRule());
					}
					set(
						$current,
						"element",
						lv_element_2_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getDeleteInstructionAccess().getCommaKeyword_3());
		}
		otherlv_4='whose'
		{
			newLeafNode(otherlv_4, grammarAccess.getDeleteInstructionAccess().getWhoseKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeleteInstructionAccess().getConditionsSingleConditionParserRuleCall_5_0());
				}
				lv_conditions_5_0=ruleSingleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeleteInstructionRule());
					}
					set(
						$current,
						"conditions",
						lv_conditions_5_0,
						"uk.ac.kcl.shiro.mydbl0304.MyDbl.SingleCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
